@using System.IO;
@using DarkBinds.Player;
@using DarkBinds.Systems.Worlds;

@namespace DarkBinds.UI.IngameHUD
@attribute [StyleSheet("/UI/IngameHUD/SaveMenu.scss")]
@inherits Panel


<root class="savemenu">
	<button class="SaveButton" @onclick=@OpenSaveMenu @ref="OpenButton">Save</button>
	<button class="Spawn" @onclick=@SpawnObject @ref="OpenButton">Spawn Spinning Object</button>
	<button class="Spawn1" @onclick=@OpenObjectNon @ref="OpenButton">Spawn non-pixelated Spinning Object</button>

	<div class="SaveMenuPanel hidden" @ref="SaveMenuPanel">
		<label class="SaveTitle">Save Game</label>
		<div class="SaveGameRow">
			<TextEntry class="savegamename" placeholder="Save Name" @ref="SaveGameNameEntry"></TextEntry>
			<button class="savegamebutton" @onclick=@SaveGame>Save</button>
		</div>
		<div class="SaveList" @ref="SaveList">

		</div>

		<button class="backbutton" @onclick=@CloseSaveMenu>Back</button>
	</div>
</root>

@code {
	public TextEntry SaveGameNameEntry { get; set; }
	public Panel SaveMenuPanel { get; set; }

	public Panel SaveList { get; set; }
	public Button OpenButton { get; set; }

	public void OpenSaveMenu()
	{
		SaveMenuPanel.SetClass("hidden", false);
		SaveGameNameEntry.Focus();
		if (!FileSystem.Data.DirectoryExists("Saves"))
		{
			FileSystem.Data.CreateDirectory("Saves");
		}
		var files = FileSystem.Data.FindFile("Saves", "*.m_save");
		if (SaveList.ChildrenCount == 0)
			foreach (var file in files)
			{
				var TempItem = new SaveState(file);
				SaveList.AddChild(TempItem);
			}

	}

	public void SpawnObject()
	{
		DarkBindCharacter.SpawnSpinningCube();
	}

	public void OpenObjectNon()
	{
		DarkBindCharacter.SpawnNonPixelatedSpinningCube();
	}

	public override void Tick()
	{
		base.Tick();
		if (Game.LocalClient.IsListenServerHost && SaveGameNameEntry.IsValid())
		{
			OpenButton?.SetClass("hidden", false);
			SaveGameNameEntry.AcceptsFocus = true;
		}
		else
		{
			OpenButton?.SetClass("hidden", true);
		}

	}

	public void CloseSaveMenu()
	{
		SaveMenuPanel.SetClass("hidden", true);
		SaveGameNameEntry.Blur();
	}
	public void SaveGame()
	{
		if (SaveGameNameEntry.Text.Length > 0)
		{
			World.SaveWorld(SaveGameNameEntry.Text);
			SaveList.DeleteChildren();
			OpenSaveMenu();
			SaveGameNameEntry.Text = "";
		}
	}


	class SaveState : Panel
	{
		public string SaveName { get; set; }
		public SaveState(string SaveName)
		{
			this.SaveName = SaveName;
			Add.Label(SaveName, "SaveName");
			Add.Button("save", "overwritesave", () =>
			{
				World.SaveWorld(Path.GetFileNameWithoutExtension(SaveName));
				Log.Error($"Overwrote {SaveName}");
			});
		}
	}
}
